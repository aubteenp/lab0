---
title: "Lab 0 - Hello R!"
author: "Aubteen Pour-Biazar"
date: "1/17/2023"
format: pdf
editor: visual
---

## Load Packages

```{r}
#| label: load-packages
#| message: false
library(tidyverse)
library(datasauRus)
```

## Exercise 1

The data set has 1846 rows and 3 columns. The three variables are x-values, y-values, and the dataset.

## Exercise 2

First, let's plot the data in the dino dataset (we will cover **ggplot2** in much more depth next week):

```{r}
#| label: plot-dino
dino_data <- datasaurus_dozen %>%
  filter(dataset == "dino")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) + 
  geom_point()
```

Next calculate the correlation between `x` and `y` in this dataset.

```{r}
#| label: cor-dino
dino_data %>%
  summarize(r = cor(x, y))
```

## Exercise 3

Let's plot the data in the circle dataset

```{r}
#| label: plot-circle
dino_data <- datasaurus_dozen %>%
  filter(dataset == "circle")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) + 
  geom_point()
```

Next, let's calculate the correlation between `x` and `y` in this dataset.

```{r}
#| label: cor-circle
dino_data %>%
  summarize(r = cor(x, y))
```

The correlation coefficient of the circle is more negative and larger in magnitude than the correlation coefficient of the dino data set.

## Exercise 4

Let's plot the data in the star dataset

```{r}
#| label: plot-star
dino_data <- datasaurus_dozen %>%
  filter(dataset == "star")
ggplot(data = dino_data, mapping = aes(x = x, y = y)) + 
  geom_point()
```

Next, let's calculate the correlation between `x` and `y` in the star dataset.

```{r}
#| label: cor-star
dino_data %>%
  summarize(r = cor(x, y))
```

The correlation coefficient of the star is less negative and smaller in magnitude than the correlation coefficient of the dino data set.

## Exercise 5

Finally, let\'s plot all datasets at once.

```{r}
ggplot(datasaurus_dozen, aes(x = x, y = y, color = dataset))+
  geom_point()+
  facet_wrap(~ dataset, ncol = 3) +
  theme(legend.position = "none")
```

Let's use the `group_by` function to generate all the summary correlation coefficients.

```{r}
datasaurus_dozen |>
  group_by(dataset) |>
  summarize(r = cor(x, y)) 
```

The plots vary widely in shape and variety - with some plots having clustered points in the middle and others with sporadic points on the sides. The correlation coefficients are all similar in values (between -6 and -7).
